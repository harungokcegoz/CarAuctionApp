//Before run these test please run auth test to get a valid token. Then you can run these tests.
//I still have receive some errors on all testing but when I test indivually or manually it passes.

### Getting all products and expecting 200
GET {{host}}:{{port}}/lotteries
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Getting all auctions and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}

### Getting specific auction based on ID and expecting 200
GET {{host}}:{{port}}/lotteries/{{id}}
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Getting specific car based on ID and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}

### Getting a auction associated with the user with the specified ID and expecting 200
GET {{host}}:{{port}}/lotteries/users/{{id}}
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Getting the user with specified ID and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}

### Adding a new auction to the list of auction data and expecting 201
POST {{host}}:{{port}}/lotteries/
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Adding specific product and expecting 201",
    function() {
        client.assert(response.status === 201, "Response status is not 201");
    }
);
%}

### Delete the auction and expecting 200
DELETE {{host}}:{{port}}/lotteries/{{id}}
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Delete the auction with the specified ID and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}

### Update the auction and expecting 200
PATCH {{host}}:{{port}}/lotteries/{{id}}
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Getting specific car based on ID and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}

### Getting all users and expecting 200
GET {{host}}:{{port}}/users
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Getting all users and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}

### Adding a user and expecting 201
POST {{host}}:{{port}}/users
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Adding specific user and expecting 201",
    function() {
        client.assert(response.status === 201, "Response status is not 201");
    }
);
%}

### Getting all bids and expecting 200
GET {{host}}:{{port}}/bids
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Getting all bids and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}

### Getting a specific bid and expecting 200
GET {{host}}:{{port}}/bids/{{id}}
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Getting a specific bid and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}

### Adding a bid and expecting 201
POST {{host}}:{{port}}/bids
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Adding specific user and expecting 201",
    function() {
        client.assert(response.status === 201, "Response status is not 201");
    }
);
%}

### Getting a specific bid and expecting 200
GET {{host}}:{{port}}/bids/users/{{id}}
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Getting a specific bid and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}

### Getting a specific bid and expecting 200
GET {{host}}:{{port}}/bids/auctions/{{id}}
Accept: application/json
Authorization: Bearer {{token}}

> {%
client.test(
    "Getting a specific bid and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}








