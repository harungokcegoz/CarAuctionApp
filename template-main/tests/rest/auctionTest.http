### Getting all products and expecting 200
GET {{host}}:{{port}}/products
Accept: application/json

> {%
client.test(
    "Getting all products and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}
### Getting specific product based on ID and expecting 200
GET {{host}}:{{port}}/products/{id}
Accept: application/json

> {%
client.test(
    "Getting specific product based on ID and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}
### Getting all users and expecting 200
GET {{host}}:{{port}}/users
Accept: application/json

> {%
client.test(
    "Getting all users and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}
### Getting specific user based on ID and expecting 200
GET {{host}}:{{port}}/users/{id}
Accept: application/json

> {%
client.test(
    "Getting specific user based on ID and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}
### Getting all orders and expecting 200
GET {{host}}:{{port}}/orders
Accept: application/json

> {%
client.test(
    "Getting all orders and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}
### Getting specific user based on ID and expecting 200
GET {{host}}:{{port}}/orders/{id}
Accept: application/json

> {%
client.test(
    "Getting specific orders based on ID and expecting 200",
    function() {
        client.assert(response.status === 200, "Response status is not 200");
    }
);
%}
### Adding specific product and expecting 201
POST {{host}}:{{port}}/add/products
Accept: application/json

> {%
client.test(
    "Adding specific product and expecting 201",
    function() {
        client.assert(response.status === 201, "Response status is not 201");
    }
);
%}
### Adding specific user and expecting 201
POST {{host}}:{{port}}/add/users
Accept: application/json

> {%
client.test(
    "Adding specific user and expecting 201",
    function() {
        client.assert(response.status === 201, "Response status is not 201");
    }
);
%}
### Adding specific order and expecting 201
POST {{host}}:{{port}}/add/orders
Accept: application/json

> {%
client.test(
    "Adding specific product and expecting 201",
    function() {
        client.assert(response.status === 201, "Response status is not 201");
    }
);
%}
### Deleteing specific product based on ID and expecting 202
DELETE {{host}}:{{port}}/remove/products/{id}
Accept: application/json

> {%
client.test(
    "Deleteing specific product based on ID and expecting 202",
    function() {
        client.assert(response.status === 202, "Response status is not 202");
    }
);
%}
### Deleteing specific user based on ID and expecting 202
DELETE {{host}}:{{port}}/remove/users/{id}
Accept: application/json

> {%
client.test(
    "Deleteing specific user based on ID and expecting 202",
    function() {
        client.assert(response.status === 202, "Response status is not 202");
    }
);
%}
### Deleteing specific order based on ID and expecting 202
DELETE {{host}}:{{port}}/remove/orders/{id}
Accept: application/json

> {%
client.test(
    "Deleteing specific order based on ID and expecting 202",
    function() {
        client.assert(response.status === 202, "Response status is not 202");
    }
);
%}
### Updating specific product's content based on ID and expecting 201
PUT {{host}}:{{port}}/update/products/{id}
Accept: application/json

> {%
client.test(
    "Updating specific product's content based on ID and expecting 201",
    function() {
        client.assert(response.status === 201, "Response status is not 201");
    }
);
%}
### Updating specific user's content based on ID and expecting 201
PUT {{host}}:{{port}}/update/users/{id}
Accept: application/json

> {%
client.test(
    "Updating specific user's content based on ID and expecting 201",
    function() {
        client.assert(response.status === 201, "Response status is not 201");
    }
);
%}
### Updating specific order's content based on ID and expecting 201
PUT {{host}}:{{port}}/update/orders/{id}
Accept: application/json

> {%
client.test(
    "Updating specific order's content based on ID and expecting 201",
    function() {
        client.assert(response.status === 201, "Response status is not 201");
    }
);
%}



